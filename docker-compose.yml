services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: masterbot
      POSTGRES_USER: masterbot
      POSTGRES_PASSWORD: masterbot
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U masterbot"]
      interval: 5s
      timeout: 5s
      retries: 5

  bot:
    build: .
    command: sh -c "python scripts/wait_for_db.py && sh scripts/entrypoint_bot.sh"
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    environment:
      # Hugging Face/Transformers cache to avoid re-downloading models
      HF_HOME: /models_cache
      TRANSFORMERS_CACHE: /models_cache
      # Configure AI
      # Gemini 2.0 по умолчанию (использует API_GEMINI_FREE из .env)
      GEMINI_MODEL_NAME: ${GEMINI_MODEL_NAME:-gemini-2.0-flash}
      # Локальная HF fallback модель
      AI_MODEL_NAME: ${AI_MODEL_NAME:-cointegrated/rut5-base-multitask}
      # Короткие ответы по умолчанию
      AI_MAX_NEW_TOKENS: ${AI_MAX_NEW_TOKENS:-60}
      # DB override for Docker network
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: masterbot
      POSTGRES_USER: masterbot
      POSTGRES_PASSWORD: masterbot
      DATABASE_URL: postgresql+asyncpg://masterbot:masterbot@postgres:5432/masterbot
    volumes:
      - .:/app
      - models_cache:/models_cache

  admin:
    build:
      context: .
      dockerfile: Dockerfile.admin
    command: sh -c "python scripts/wait_for_db.py && python scripts/ensure_superadmin.py && sh scripts/entrypoint_admin.sh"
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      # DB override for Docker network
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: masterbot
      POSTGRES_USER: masterbot
      POSTGRES_PASSWORD: masterbot
      DATABASE_URL: postgresql+asyncpg://masterbot:masterbot@postgres:5432/masterbot
    volumes:
      - .:/app

volumes:
  pgdata:
  models_cache:
