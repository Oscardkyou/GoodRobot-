"""AI Assistant handler for GoodRobot bot (local LLM)."""
import logging
from asyncio import get_running_loop

from aiogram import F, Router
from aiogram.types import Message

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é –ò–ò (DistilGPT-2 —á–µ—Ä–µ–∑ Transformers)
from app.ai_agent.simple_ai import get_ai_response

logger = logging.getLogger(__name__)
router = Router()

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞ —Å –ò–ò
ai_users = set()

@router.message(F.text == "ü§ñ –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫")
async def ai_assistant_button(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤."""
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–µ–∂–∏–º –ò–ò
    ai_users.add(message.from_user.id)

    await message.answer(
        "ü§ñ –ü—Ä–∏–≤–µ—Ç! –Ø –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫. –ó–∞–¥–∞–π—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –≤–∞–º –ø–æ–º–æ—á—å.\n\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã –º–æ–∂–µ—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å:\n"
        "- –ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑?\n"
        "- –ö–∞–∫ –≤—ã–±—Ä–∞—Ç—å –º–∞—Å—Ç–µ—Ä–∞?\n"
        "- –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞?\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ —è –æ—Ç–≤–µ—á—É!\n\n"
        "–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –ò–ò, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /stop"
    )

@router.message(F.text == "/stop")
async def stop_ai_mode(message: Message) -> None:
    """–í—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–∞."""
    if message.from_user.id in ai_users:
        ai_users.discard(message.from_user.id)
        await message.answer("–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–∞.")
    else:
        await message.answer("–í—ã –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫–∞.")

@router.message(F.text == "/start")
async def start_command(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start."""
    # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ä–µ–∂–∏–º–∞ –ò–ò –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
    if message.from_user.id in ai_users:
        ai_users.discard(message.from_user.id)

    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.")

@router.message(F.text)
async def ai_assistant_query(message: Message) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–∞ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏ (DistilGPT-2)."""
    if message.from_user.id not in ai_users:
        return

    try:
        loop = get_running_loop()
        response = await loop.run_in_executor(
            None,
            get_ai_response,
            message.text,
            True  # –ø–∞—Ä–∞–º–µ—Ç—Ä —Å–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏; –≤–Ω—É—Ç—Ä–∏ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ—Ç—Å—è
        )
        await message.answer(response)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ò–ò: {e}")
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –º–æ–≥—É –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å")
