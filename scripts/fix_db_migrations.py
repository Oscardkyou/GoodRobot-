#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
–ù–∞–ø—Ä—è–º—É—é —É–¥–∞–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ ENUM —Ç–∏–ø—ã –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –º–∏–≥—Ä–∞—Ü–∏–π.
"""

import asyncio
import os
import sys
from sqlalchemy import text
from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession
from sqlalchemy.orm import sessionmaker

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
DATABASE_URL = os.environ.get("DATABASE_URL", "postgresql+asyncpg://masterbot:masterbot@postgres:5432/masterbot")
engine = create_async_engine(DATABASE_URL)
SessionFactory = sessionmaker(engine, class_=AsyncSession, expire_on_commit=False)


async def fix_migrations():
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—ã —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    print("üîß –ù–∞—á–∏–Ω–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –º–∏–≥—Ä–∞—Ü–∏—è–º–∏...")
    
    async with SessionFactory() as session:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö ENUM —Ç–∏–ø–æ–≤
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–∞ chat_session_status_enum...")
        result = await session.execute(
            text("SELECT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'chat_session_status_enum')")
        )
        exists = result.scalar()
        
        if exists:
            print("‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω –ø—Ä–æ–±–ª–µ–º–Ω—ã–π —Ç–∏–ø chat_session_status_enum, —É–¥–∞–ª—è–µ–º...")
            try:
                # –£–¥–∞–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã, –µ—Å–ª–∏ –æ–Ω–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
                await session.execute(text("DROP TABLE IF EXISTS chat_sessions CASCADE"))
                await session.execute(text("DROP TABLE IF EXISTS chat_messages CASCADE"))
                
                # –£–¥–∞–ª—è–µ–º ENUM —Ç–∏–ø—ã
                await session.execute(text("DROP TYPE IF EXISTS chat_session_status_enum CASCADE"))
                await session.execute(text("DROP TYPE IF EXISTS chat_message_type_enum CASCADE"))
                
                print("‚úÖ –¢–∏–ø—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–∏–ø–æ–≤: {e}")
                return
        else:
            print("‚úÖ –¢–∏–ø chat_session_status_enum –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É –º–∏–≥—Ä–∞—Ü–∏–π alembic_version
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É –º–∏–≥—Ä–∞—Ü–∏–π alembic_version...")
        try:
            result = await session.execute(text("SELECT version_num FROM alembic_version"))
            versions = result.scalars().all()
            
            if versions:
                print(f"üìä –¢–µ–∫—É—â–∏–µ –≤–µ—Ä—Å–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–π: {', '.join(versions)}")
                
                # –ù–∞—Ö–æ–¥–∏–º –º–∏–≥—Ä–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –ø—Ä–æ–±–ª–µ–º–Ω–æ–π
                if 'd90c3fb44c85' in versions:
                    print("‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è d90c3fb44c85, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –¥–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–π...")
                    await session.execute(
                        text("DELETE FROM alembic_version WHERE version_num = 'd90c3fb44c85'")
                    )
                    print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ –∏–∑ alembic_version.")
                else:
                    print("‚úÖ –ü—Ä–æ–±–ª–µ–º–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ alembic_version.")
            else:
                print("‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü–∞ alembic_version –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã –º–∏–≥—Ä–∞—Ü–∏–π: {e}")
            return
        
        # –§–∏–∫—Å–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        await session.commit()
        print("‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
    
    print("üéâ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –¢–µ–ø–µ—Ä—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–æ–µ–∫—Ç.")


if __name__ == "__main__":
    asyncio.run(fix_migrations())