"""
–°—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—è–º–∏.
"""
import streamlit as st
import pandas as pd
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))

from admin_streamlit.utils.auth import check_auth
from admin_streamlit.utils.db import (
    execute_query, execute_action, get_session, 
    insert_record, update_record, delete_record, get_record_by_id
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ | GoodRobot Admin",
    page_icon="ü§ñ",
    layout="wide",
)

# –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
if not check_auth():
    st.stop()

st.title("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—è–º–∏")

# –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏
col1, col2 = st.columns([2, 1])

with col1:
    st.subheader("–°–ø–∏—Å–æ–∫ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π
    specialties_df = execute_query(
        """
        SELECT s.id, s.name, s.description, c.name as category_name,
               COUNT(DISTINCT ms.master_id) as masters_count,
               COUNT(DISTINCT o.id) as orders_count
        FROM specialties s
        LEFT JOIN categories c ON s.category_id = c.id
        LEFT JOIN master_specialties ms ON s.id = ms.specialty_id
        LEFT JOIN orders o ON s.id = o.specialty_id
        GROUP BY s.id, s.name, s.description, c.name
        ORDER BY s.name
        """
    )
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π
    if not specialties_df.empty:
        st.dataframe(specialties_df, use_container_width=True)
    else:
        st.info("–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    # –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
    st.subheader("–î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
    
    specialty_id = st.number_input("ID —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏", min_value=1, step=1)
    
    if st.button("–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏", key="show_details"):
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
        specialty_info = execute_query(
            """
            SELECT s.*, c.name as category_name
            FROM specialties s
            LEFT JOIN categories c ON s.category_id = c.id
            WHERE s.id = :id
            """,
            {"id": specialty_id}
        )
        
        if not specialty_info.empty:
            specialty_data = specialty_info.iloc[0]
            
            st.write("### –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
            st.write(f"**ID:** {specialty_data['id']}")
            st.write(f"**–ù–∞–∑–≤–∞–Ω–∏–µ:** {specialty_data['name']}")
            st.write(f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {specialty_data['description'] if 'description' in specialty_data and specialty_data['description'] else '–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}")
            st.write(f"**–ö–∞—Ç–µ–≥–æ—Ä–∏—è:** {specialty_data['category_name'] if 'category_name' in specialty_data and specialty_data['category_name'] else '–ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏'}")
            
            # –ú–∞—Å—Ç–µ—Ä–∞ —Å —ç—Ç–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å—é
            masters = execute_query(
                """
                SELECT m.id, m.name, m.phone, m.rating
                FROM masters m
                JOIN master_specialties ms ON m.id = ms.master_id
                WHERE ms.specialty_id = :specialty_id
                ORDER BY m.name
                """,
                {"specialty_id": specialty_id}
            )
            
            st.write("### –ú–∞—Å—Ç–µ—Ä–∞ —Å —ç—Ç–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å—é")
            if not masters.empty:
                st.dataframe(masters)
            else:
                st.info("–ù–µ—Ç –º–∞—Å—Ç–µ—Ä–æ–≤ —Å —ç—Ç–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å—é")
            
            # –ó–∞–∫–∞–∑—ã –ø–æ —ç—Ç–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
            orders = execute_query(
                """
                SELECT o.id, o.created_at, o.status, o.price,
                       c.name as client_name, m.name as master_name
                FROM orders o
                LEFT JOIN clients c ON o.client_id = c.id
                LEFT JOIN masters m ON o.master_id = m.id
                WHERE o.specialty_id = :specialty_id
                ORDER BY o.created_at DESC
                LIMIT 10
                """,
                {"specialty_id": specialty_id}
            )
            
            st.write("### –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã –ø–æ —ç—Ç–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏")
            if not orders.empty:
                # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
                orders['created_at'] = pd.to_datetime(orders['created_at']).dt.strftime('%Y-%m-%d %H:%M')
                st.dataframe(orders)
            else:
                st.info("–ù–µ—Ç –∑–∞–∫–∞–∑–æ–≤ –ø–æ —ç—Ç–æ–π —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏")
        else:
            st.error("–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

with col2:
    st.subheader("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏")
    
    with st.form("add_specialty_form"):
        name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ")
        description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        categories = execute_query("SELECT id, name FROM categories ORDER BY name")
        
        if not categories.empty:
            category_options = [(0, "–ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")] + [(row['id'], row['name']) for _, row in categories.iterrows()]
            category_id = st.selectbox(
                "–ö–∞—Ç–µ–≥–æ—Ä–∏—è",
                options=category_options,
                format_func=lambda x: x[1]
            )[0]
        else:
            category_id = None
            st.info("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
        
        submitted = st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å")
        
        if submitted:
            if name:
                # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
                specialty_data = {
                    "name": name,
                    "description": description,
                    "category_id": category_id if category_id and category_id > 0 else None
                }
                
                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                success = insert_record("specialties", specialty_data)
                
                if success:
                    st.success(f"–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å '{name}' —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
                    # –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
                    st.experimental_rerun()
                else:
                    st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏")
            else:
                st.error("–ù–∞–∑–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ")
    
    st.subheader("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏")
    
    edit_specialty_id = st.number_input("ID —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", min_value=1, step=1, key="edit_specialty_id")
    
    if st.button("–ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", key="load_data"):
        specialty_data = execute_query(
            """
            SELECT * FROM specialties WHERE id = :id
            """,
            {"id": edit_specialty_id}
        )
        
        if not specialty_data.empty:
            st.session_state.specialty_data = specialty_data.iloc[0].to_dict()
        else:
            st.error("–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    if "specialty_data" in st.session_state:
        with st.form("edit_specialty_form"):
            edit_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ", value=st.session_state.specialty_data.get("name", ""))
            edit_description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ", value=st.session_state.specialty_data.get("description", ""))
            
            # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            categories = execute_query("SELECT id, name FROM categories ORDER BY name")
            
            if not categories.empty:
                category_options = [(0, "–ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")] + [(row['id'], row['name']) for _, row in categories.iterrows()]
                current_category_id = st.session_state.specialty_data.get("category_id", 0) or 0
                
                # –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Å–ø–∏—Å–∫–µ
                selected_index = 0
                for i, (cat_id, _) in enumerate(category_options):
                    if cat_id == current_category_id:
                        selected_index = i
                        break
                
                edit_category_id = st.selectbox(
                    "–ö–∞—Ç–µ–≥–æ—Ä–∏—è",
                    options=category_options,
                    index=selected_index,
                    format_func=lambda x: x[1]
                )[0]
            else:
                edit_category_id = None
                st.info("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π")
            
            update_submitted = st.form_submit_button("–û–±–Ω–æ–≤–∏—Ç—å")
            
            if update_submitted:
                if edit_name:
                    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                    update_data = {
                        "name": edit_name,
                        "description": edit_description,
                        "category_id": edit_category_id if edit_category_id and edit_category_id > 0 else None
                    }
                    
                    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                    success = update_record(
                        "specialties", 
                        update_data, 
                        f"id = {st.session_state.specialty_data['id']}"
                    )
                    
                    if success:
                        st.success(f"–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å '{edit_name}' —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
                        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Å–µ—Å—Å–∏–∏
                        st.session_state.specialty_data.update(update_data)
                        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                        st.experimental_rerun()
                    else:
                        st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏")
                else:
                    st.error("–ù–∞–∑–≤–∞–Ω–∏–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ")
