"""
–°—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º–∏.
"""
import streamlit as st
import pandas as pd
import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))

from admin_streamlit.utils.auth import check_auth
from admin_streamlit.utils.db import (
    execute_query, execute_action, get_session, 
    insert_record, update_record, delete_record, get_record_by_id
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–ö–ª–∏–µ–Ω—Ç—ã | GoodRobot Admin",
    page_icon="ü§ñ",
    layout="wide",
)

# –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
if not check_auth():
    st.stop()

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
def get_all_clients():
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
    """
    return execute_query("""
        SELECT c.id, c.telegram_id, c.name, c.phone, c.created_at,
               COUNT(DISTINCT o.id) as orders_count
        FROM clients c
        LEFT JOIN orders o ON c.id = o.client_id
        GROUP BY c.id, c.telegram_id, c.name, c.phone, c.created_at
        ORDER BY c.id
    """)

def get_client_details(client_id):
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–ª–∏–µ–Ω—Ç–µ
    """
    client_data = get_record_by_id("clients", "id", client_id)
    if client_data.empty:
        return None
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞
    orders = execute_query("""
        SELECT o.id, o.created_at, o.status, o.price,
               m.name as master_name, s.name as specialty_name
        FROM orders o
        LEFT JOIN masters m ON o.master_id = m.id
        LEFT JOIN specialties s ON o.specialty_id = s.id
        WHERE o.client_id = :client_id
        ORDER BY o.created_at DESC
        LIMIT 10
    """, {"client_id": client_id})
    
    return {
        "client": client_data.iloc[0].to_dict(),
        "orders": orders
    }

def create_new_client(data):
    """
    –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
    """
    # –î–æ–±–∞–≤–ª—è–µ–º –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è
    data['created_at'] = datetime.now().isoformat()
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
    return insert_record("clients", data)

def update_existing_client(client_id, data):
    """
    –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
    """
    return update_record("clients", data, f"id = {client_id}")

st.title("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏")

# –í–∫–ª–∞–¥–∫–∏
tab1, tab2 = st.tabs(["–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤", "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞"])

# –í–∫–ª–∞–¥–∫–∞ "–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤"
with tab1:
    # –§–∏–ª—å—Ç—Ä—ã
    st.subheader("–§–∏–ª—å—Ç—Ä—ã")
    col1, col2 = st.columns(2)
    
    with col1:
        name_filter = st.text_input("–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞")
    
    with col2:
        phone_filter = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω")
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —É—á–µ—Ç–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤
    if not name_filter and not phone_filter:
        # –ë–µ–∑ —Ñ–∏–ª—å—Ç—Ä–æ–≤
        clients_df = get_all_clients()
    else:
        # –° —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
        query = """
            SELECT c.id, c.telegram_id, c.name, c.phone, c.created_at,
                   COUNT(DISTINCT o.id) as orders_count
            FROM clients c
            LEFT JOIN orders o ON c.id = o.client_id
        """
        
        where_clauses = []
        params = {}
        
        if name_filter:
            where_clauses.append("c.name LIKE :name")
            params["name"] = f"%{name_filter}%"
        
        if phone_filter:
            where_clauses.append("c.phone LIKE :phone")
            params["phone"] = f"%{phone_filter}%"
        
        if where_clauses:
            query += " WHERE " + " AND ".join(where_clauses)
        
        query += """
            GROUP BY c.id, c.telegram_id, c.name, c.phone, c.created_at
            ORDER BY c.id
        """
        
        clients_df = execute_query(query, params)
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∫–ª–∏–µ–Ω—Ç–æ–≤
    st.subheader("–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤")
    
    if not clients_df.empty:
        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
        if 'created_at' in clients_df.columns:
            clients_df['created_at'] = pd.to_datetime(clients_df['created_at']).dt.strftime('%Y-%m-%d %H:%M')
        
        # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Å—Ç–æ–ª–±—Ü—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        display_df = clients_df.rename(columns={
            'id': 'ID',
            'telegram_id': 'Telegram ID',
            'name': '–ò–º—è',
            'phone': '–¢–µ–ª–µ—Ñ–æ–Ω',
            'created_at': '–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏',
            'orders_count': '–ó–∞–∫–∞–∑—ã'
        })
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        st.dataframe(display_df, use_container_width=True)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–¥ —Ç–∞–±–ª–∏—Ü–µ–π
        st.write("–î–µ–π—Å—Ç–≤–∏—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏:")
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            client_id_view = st.number_input("–í—ã–±–µ—Ä–∏—Ç–µ ID –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞", min_value=1, step=1)
            if st.button("–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å"):
                st.session_state.client_id = client_id_view
                st.session_state.client_action = "view"
                st.experimental_rerun()
        
        with col2:
            client_id_edit = st.number_input("–í—ã–±–µ—Ä–∏—Ç–µ ID –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", min_value=1, step=1)
            if st.button("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"):
                st.session_state.client_id = client_id_edit
                st.session_state.client_action = "edit"
                st.experimental_rerun()
        
        with col3:
            client_id_delete = st.number_input("–í—ã–±–µ—Ä–∏—Ç–µ ID –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", min_value=1, step=1)
            if st.button("–£–¥–∞–ª–∏—Ç—å", type="primary", use_container_width=True):
                # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è
                st.session_state.client_id = client_id_delete
                st.session_state.client_action = "delete"
                st.experimental_rerun()
        
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
        st.write("""
        ---
        –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞:
        """)
        if st.button("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞", use_container_width=True):
            st.session_state.client_action = "new"
            st.experimental_rerun()
    else:
        st.info("–ö–ª–∏–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

# –í–∫–ª–∞–¥–∫–∞ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞"
with tab2:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –≤ —Å–µ—Å—Å–∏–∏
    if 'client_action' in st.session_state and 'client_id' in st.session_state:
        action = st.session_state.client_action
        client_id = st.session_state.client_id
        
        # –î–µ–π—Å—Ç–≤–∏–µ "–ü—Ä–æ—Å–º–æ—Ç—Ä"
        if action == "view":
            client_details = get_client_details(client_id)
            if client_details:
                st.subheader(f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ: {client_details['client']['name']}")
                
                col1, col2 = st.columns(2)
                
                with col1:
                    st.write("### –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è")
                    st.write(f"**ID:** {client_details['client']['id']}")
                    st.write(f"**Telegram ID:** {client_details['client']['telegram_id']}")
                    st.write(f"**–ò–º—è:** {client_details['client']['name']}")
                    st.write(f"**–¢–µ–ª–µ—Ñ–æ–Ω:** {client_details['client']['phone']}")
                    st.write(f"**–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:** {pd.to_datetime(client_details['client']['created_at']).strftime('%Y-%m-%d %H:%M')}")
                    
                    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                    if st.button("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞"):
                        st.session_state.client_action = "edit"
                        st.experimental_rerun()
                
                with col2:
                    st.write("### –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
                    orders_count = len(client_details['orders'])
                    st.write(f"**–í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤:** {orders_count}")
                    
                    if orders_count > 0:
                        # –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤
                        statuses = client_details['orders']['status'].value_counts().to_dict()
                        st.write("**–°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤:**")
                        for status, count in statuses.items():
                            st.write(f"- {status}: {count}")
                        
                        # –û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤
                        total_spent = client_details['orders']['price'].sum()
                        st.write(f"**–û–±—â–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–æ–≤:** {total_spent:.2f} —Ä—É–±.")
                
                st.write("### –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã")
                if not client_details['orders'].empty:
                    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
                    client_details['orders']['created_at'] = pd.to_datetime(client_details['orders']['created_at']).dt.strftime('%Y-%m-%d %H:%M')
                    
                    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Å—Ç–æ–ª–±—Ü—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    display_orders = client_details['orders'].rename(columns={
                        'id': 'ID',
                        'created_at': '–î–∞—Ç–∞',
                        'status': '–°—Ç–∞—Ç—É—Å',
                        'price': '–¶–µ–Ω–∞',
                        'master_name': '–ú–∞—Å—Ç–µ—Ä',
                        'specialty_name': '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å'
                    })
                    
                    st.dataframe(display_orders, use_container_width=True)
                else:
                    st.info("–£ –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤")
                
                # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É
                if st.button("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É"):
                    del st.session_state.client_action
                    del st.session_state.client_id
                    st.experimental_rerun()
            else:
                st.error(f"–ö–ª–∏–µ–Ω—Ç —Å ID {client_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                if st.button("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É"):
                    del st.session_state.client_action
                    del st.session_state.client_id
                    st.experimental_rerun()
        
        # –î–µ–π—Å—Ç–≤–∏–µ "–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ"
        elif action == "edit":
            st.subheader(f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ ID: {client_id}")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
            client_data = get_record_by_id("clients", "id", client_id)
            
            if not client_data.empty:
                client = client_data.iloc[0]
                
                with st.form("edit_client_form"):
                    name = st.text_input("–ò–º—è", value=client['name'])
                    telegram_id = st.number_input("Telegram ID", value=int(client['telegram_id']), min_value=1)
                    phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω", value=client['phone'] if pd.notna(client['phone']) else "")
                    
                    submitted = st.form_submit_button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å")
                    
                    if submitted:
                        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                        update_data = {
                            "name": name,
                            "telegram_id": telegram_id,
                            "phone": phone
                        }
                        
                        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞
                        if update_existing_client(client_id, update_data):
                            st.success(f"–ö–ª–∏–µ–Ω—Ç {name} —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω")
                            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Ä–µ–∂–∏–º—É –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
                            st.session_state.client_action = "view"
                            st.experimental_rerun()
                        else:
                            st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞")
                
                # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É
                if st.button("–û—Ç–º–µ–Ω–∞"):
                    del st.session_state.client_action
                    del st.session_state.client_id
                    st.experimental_rerun()
            else:
                st.error(f"–ö–ª–∏–µ–Ω—Ç —Å ID {client_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                if st.button("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É"):
                    del st.session_state.client_action
                    del st.session_state.client_id
                    st.experimental_rerun()
        
        # –î–µ–π—Å—Ç–≤–∏–µ "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ"
        elif action == "new":
            st.subheader("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞")
            
            with st.form("add_client_form"):
                name = st.text_input("–ò–º—è")
                telegram_id = st.number_input("Telegram ID", min_value=1)
                phone = st.text_input("–¢–µ–ª–µ—Ñ–æ–Ω")
                
                submitted = st.form_submit_button("–°–æ–∑–¥–∞—Ç—å")
                
                if submitted:
                    if not name or not telegram_id:
                        st.error("–ò–º—è –∏ Telegram ID –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è")
                    else:
                        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
                        new_client_data = {
                            "name": name,
                            "telegram_id": telegram_id,
                            "phone": phone if phone else None
                        }
                        
                        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞
                        if create_new_client(new_client_data):
                            st.success(f"–ö–ª–∏–µ–Ω—Ç {name} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω")
                            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É
                            del st.session_state.client_action
                            if 'client_id' in st.session_state:
                                del st.session_state.client_id
                            st.experimental_rerun()
                        else:
                            st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞")
            
            # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ —Å–ø–∏—Å–∫—É
            if st.button("–û—Ç–º–µ–Ω–∞"):
                del st.session_state.client_action
                if 'client_id' in st.session_state:
                    del st.session_state.client_id
                st.experimental_rerun()
        
        # –î–µ–π—Å—Ç–≤–∏–µ "–£–¥–∞–ª–µ–Ω–∏–µ"
        elif action == "delete":
            st.subheader(f"–£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ ID: {client_id}")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞
            client_data = get_record_by_id("clients", "id", client_id)
            
            if not client_data.empty:
                client = client_data.iloc[0]
                
                st.warning(f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ {client['name']} (ID: {client_id})?")
                st.warning("–í–Ω–∏–º–∞–Ω–∏–µ! –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —Ç–∞–∫–∂–µ —É–¥–∞–ª–∏—Ç –≤—Å–µ –∑–∞–∫–∞–∑—ã –∫–ª–∏–µ–Ω—Ç–∞!")
                
                col1, col2 = st.columns(2)
                
                with col1:
                    if st.button("–î–∞, —É–¥–∞–ª–∏—Ç—å", type="primary"):
                        # –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º –∑–∞–∫–∞–∑—ã –∫–ª–∏–µ–Ω—Ç–∞
                        delete_record("orders", "client_id = :client_id", {"client_id": client_id})
                        
                        # –ó–∞—Ç–µ–º —É–¥–∞–ª—è–µ–º —Å–∞–º–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
                        if delete_record("clients", "id = :id", {"id": client_id}):
                            st.success(f"–ö–ª–∏–µ–Ω—Ç {client['name']} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
                            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å–ø–∏—Å–∫—É
                            del st.session_state.client_action
                            del st.session_state.client_id
                            st.experimental_rerun()
                        else:
                            st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞")
                
                with col2:
                    if st.button("–û—Ç–º–µ–Ω–∞", use_container_width=True):
                        del st.session_state.client_action
                        del st.session_state.client_id
                        st.experimental_rerun()
            else:
                st.error(f"–ö–ª–∏–µ–Ω—Ç —Å ID {client_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                if st.button("–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å–ø–∏—Å–∫—É"):
                    del st.session_state.client_action
                    del st.session_state.client_id
                    st.experimental_rerun()
    else:
        st.info("–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª–∏–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞.")
