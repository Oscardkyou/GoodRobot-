"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª Streamlit –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ GoodRobot.
"""
import streamlit as st
import pandas as pd
from datetime import datetime, timedelta
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))

from admin_streamlit.utils.auth import check_auth
from admin_streamlit.utils.db import execute_query

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="GoodRobot Admin",
    page_icon="ü§ñ",
    layout="wide",
    initial_sidebar_state="expanded",
)

# –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
if not check_auth():
    st.stop()

# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–¥–º–∏–Ω–∫–∏
st.title("GoodRobot Admin Panel")
st.write("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å GoodRobot!")

# –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
st.header("–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")

# –£—Ç–∏–ª–∏—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Å–∫–∞–ª—è—Ä–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –∑–∞–ø—Ä–æ—Å–∞
def scalar_query(query: str, params: dict | None, column: str, default=0):
    try:
        df = execute_query(query, params) if params is not None else execute_query(query)
        if df.empty or column not in df.columns:
            return default
        val = df.iloc[0][column]
        if pd.isna(val):
            return default
        return val
    except Exception:
        return default
col1, col2, col3, col4 = st.columns(4)

try:
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Å—Ç–µ—Ä–æ–≤
    masters_count = scalar_query("SELECT COUNT(*) as count FROM masters", None, 'count', 0)
    col1.metric("–ú–∞—Å—Ç–µ—Ä–∞", masters_count)
    
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤
    orders_count = scalar_query("SELECT COUNT(*) as count FROM orders", None, 'count', 0)
    col2.metric("–ó–∞–∫–∞–∑—ã", orders_count)
    
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤
    clients_count = scalar_query("SELECT COUNT(*) as count FROM clients", None, 'count', 0)
    col3.metric("–ö–ª–∏–µ–Ω—Ç—ã", clients_count)
    
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–µ–π
    specialties_count = scalar_query("SELECT COUNT(*) as count FROM specialties", None, 'count', 0)
    col4.metric("–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏", specialties_count)
    
    # –ì—Ä–∞—Ñ–∏–∫ –∑–∞–∫–∞–∑–æ–≤ –ø–æ –¥–Ω—è–º
    st.header("–ó–∞–∫–∞–∑—ã –ø–æ –¥–Ω—è–º")
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
    orders_by_day = execute_query(
        """
        SELECT DATE(created_at) as date, COUNT(*) as count 
        FROM orders 
        WHERE created_at >= :start_date
        GROUP BY DATE(created_at)
        ORDER BY date DESC
        """,
        {"start_date": (datetime.now() - timedelta(days=30)).strftime('%Y-%m-%d')}
    )
    
    if not orders_by_day.empty:
        st.bar_chart(orders_by_day.set_index('date'))
    else:
        st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–∫–∞–∑–∞—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π")
    
    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã
    st.header("–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã")
    recent_orders = execute_query(
        """
        SELECT o.id, o.created_at, c.name as client_name, m.name as master_name, o.status, o.price
        FROM orders o
        LEFT JOIN clients c ON o.client_id = c.id
        LEFT JOIN masters m ON o.master_id = m.id
        ORDER BY o.created_at DESC
        LIMIT 10
        """
    )
    
    if not recent_orders.empty:
        st.dataframe(recent_orders, use_container_width=True)
    else:
        st.info("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–∫–∞–∑–∞—Ö")
    
except Exception as e:
    st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")

# –°–∞–π–¥–±–∞—Ä —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
st.sidebar.title("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
st.sidebar.info(
    """
    –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –≤—ã—à–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º –∞–¥–º–∏–Ω–∫–∏.
    
    **–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:**
    - –ì–ª–∞–≤–Ω–∞—è (—Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
    - –ú–∞—Å—Ç–µ—Ä–∞
    - –ó–∞–∫–∞–∑—ã
    - –ö–ª–∏–µ–Ω—Ç—ã
    - –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
    - –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
    """
)

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä—Å–∏–∏
st.sidebar.markdown("---")
st.sidebar.info(
    """
    **GoodRobot Admin Panel**
    
    –í–µ—Ä—Å–∏—è: 1.0.0
    
    ¬© 2025 GoodRobot
    """
)
