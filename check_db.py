#!/usr/bin/env python3
"""Quick script to check database contents."""
import asyncio
from sqlalchemy import select, text
from core.db import SessionFactory
from app.models import User, Order, Bid

async def check_db():
    async with SessionFactory() as session:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
        result = await session.execute(text("""
            SELECT tablename FROM pg_tables 
            WHERE schemaname = 'public'
        """))
        tables = result.fetchall()
        print("üìä –¢–∞–±–ª–∏—Ü—ã –≤ –ë–î:")
        for t in tables:
            print(f"  - {t[0]}")
        
        # –°—á–∏—Ç–∞–µ–º –∑–∞–ø–∏—Å–∏
        from sqlalchemy import func
        user_count = await session.scalar(select(func.count(User.id)))
        order_count = await session.scalar(select(func.count(Order.id)))
        bid_count = await session.scalar(select(func.count(Bid.id)))
        
        print(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {user_count}")
        print(f"  –ó–∞–∫–∞–∑–æ–≤: {order_count}")
        print(f"  –°—Ç–∞–≤–æ–∫: {bid_count}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        users = (await session.execute(select(User))).scalars().all()
        if users:
            print(f"\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
            for u in users:
                print(f"  [{u.id}] @{u.tg_id} - {u.role} - {u.name}")
                if u.zones:
                    print(f"      –†–∞–π–æ–Ω—ã: {', '.join(u.zones)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã
        orders = (await session.execute(
            select(Order).order_by(Order.created_at.desc()).limit(5)
        )).scalars().all()
        if orders:
            print(f"\nüì¶ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã:")
            for o in orders:
                print(f"  [{o.id}] {o.category} –≤ {o.zone} - —Å—Ç–∞—Ç—É—Å: {o.status}")

if __name__ == "__main__":
    asyncio.run(check_db())