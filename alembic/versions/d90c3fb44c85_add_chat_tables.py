"""add chat tables

Revision ID: d90c3fb44c85
Revises: 10cad352dcf7
Create Date: 2025-09-05 21:24:58.131840

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd90c3fb44c85'
down_revision: Union[str, None] = '10cad352dcf7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


# Define ENUM types for idempotency (do not auto-create; use create_type=False)
chat_session_status_enum = postgresql.ENUM(
    'active', 'closed', name='chat_session_status_enum', create_type=False
)
chat_message_type_enum = postgresql.ENUM(
    'text', 'photo', 'video', 'voice', 'document', name='chat_message_type_enum', create_type=False
)


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Create ENUM types in a race-safe way (avoid DuplicateObject on concurrent runs)
    op.execute(
        """
        DO $$
        BEGIN
            CREATE TYPE chat_session_status_enum AS ENUM ('active', 'closed');
        EXCEPTION WHEN duplicate_object THEN
            NULL;
        END$$;
        """
    )
    op.execute(
        """
        DO $$
        BEGIN
            CREATE TYPE chat_message_type_enum AS ENUM ('text', 'photo', 'video', 'voice', 'document');
        EXCEPTION WHEN duplicate_object THEN
            NULL;
        END$$;
        """
    )

    op.create_table('chat_sessions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('order_id', sa.BigInteger(), nullable=False),
    sa.Column('client_id', sa.BigInteger(), nullable=False),
    sa.Column('master_id', sa.BigInteger(), nullable=False),
    sa.Column('status', chat_session_status_enum, nullable=False),
    sa.Column('started_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.Column('last_activity_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['master_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_sessions_client_id'), 'chat_sessions', ['client_id'], unique=False)
    op.create_index(op.f('ix_chat_sessions_id'), 'chat_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_chat_sessions_master_id'), 'chat_sessions', ['master_id'], unique=False)
    op.create_index(op.f('ix_chat_sessions_order_id'), 'chat_sessions', ['order_id'], unique=False)
    op.create_index(op.f('ix_chat_sessions_status'), 'chat_sessions', ['status'], unique=False)
    op.create_table('chat_messages',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('session_id', sa.BigInteger(), nullable=False),
    sa.Column('sender_id', sa.BigInteger(), nullable=False),
    sa.Column('receiver_id', sa.BigInteger(), nullable=False),
    sa.Column('message_type', chat_message_type_enum, nullable=False),
    sa.Column('content_text', sa.Text(), nullable=True),
    sa.Column('file_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_messages_id'), 'chat_messages', ['id'], unique=False)
    op.create_index(op.f('ix_chat_messages_message_type'), 'chat_messages', ['message_type'], unique=False)
    op.create_index(op.f('ix_chat_messages_session_id'), 'chat_messages', ['session_id'], unique=False)
    op.alter_column('bids', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_master_categories_category', table_name='master_categories', if_exists=True)
    op.drop_index('ix_master_categories_user_category', table_name='master_categories', if_exists=True)
    op.drop_index('ix_master_categories_user_id', table_name='master_categories', if_exists=True)
    op.alter_column('orders', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('partners', 'payout_percent',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('payouts', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_column('specialties', 'description')
    op.alter_column('users', 'rating_avg',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('true'))
    op.drop_index('ix_users_is_active', table_name='users', if_exists=True)
    op.drop_index('ix_users_phone', table_name='users', if_exists=True)
    op.drop_index('ix_users_role', table_name='users', if_exists=True)
    op.drop_index('ix_users_role_is_active', table_name='users', if_exists=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_users_role_is_active', 'users', ['role', 'is_active'], unique=False)
    op.create_index('ix_users_role', 'users', ['role'], unique=False)
    op.create_index('ix_users_phone', 'users', ['phone'], unique=False)
    op.create_index('ix_users_is_active', 'users', ['is_active'], unique=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('true'))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'rating_avg',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.add_column('specialties', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('payouts', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('partners', 'payout_percent',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('orders', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_index('ix_master_categories_user_id', 'master_categories', ['user_id'], unique=False)
    op.create_index('ix_master_categories_user_category', 'master_categories', ['user_id', 'category'], unique=False)
    op.create_index('ix_master_categories_category', 'master_categories', ['category'], unique=False)
    op.alter_column('bids', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('ix_chat_messages_session_id'), table_name='chat_messages')
    op.drop_index(op.f('ix_chat_messages_message_type'), table_name='chat_messages')
    op.drop_index(op.f('ix_chat_messages_id'), table_name='chat_messages')
    op.drop_table('chat_messages')
    op.drop_index(op.f('ix_chat_sessions_status'), table_name='chat_sessions')
    op.drop_index(op.f('ix_chat_sessions_order_id'), table_name='chat_sessions')
    op.drop_index(op.f('ix_chat_sessions_master_id'), table_name='chat_sessions')
    op.drop_index(op.f('ix_chat_sessions_id'), table_name='chat_sessions')
    op.drop_index(op.f('ix_chat_sessions_client_id'), table_name='chat_sessions')
    op.drop_table('chat_sessions')

    chat_message_type_enum.drop(op.get_bind(), checkfirst=True)
    chat_session_status_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
